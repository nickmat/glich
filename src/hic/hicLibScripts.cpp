/* ../../src/hic/hicLibScripts.cpp - File created by file2cpp 1.0.0 */

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Name:        lib/hics/hicScripts.f2c
 * Project:     Glich: Extendable Script Language.
 * Purpose:     file2cpp template file for hics library scripts.
 * Author:      Nick Matthews
 * Website:     https://github.com/nickmat/glich
 * Created:     1st April 2023
 * Copyright:   Copyright (c) 2023..2025, Nick Matthews.
 * Licence:     GNU GPLv3
 *
 *  Glich is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Glich is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Glich.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 This template is used to create the src/glc/hicLibScripts.cpp file.

*/

#include "hicLibScripts.h"

// Built-in section.
glich::ScriptModule glich::hics_builtin_scripts[] = {
    { "hic_builtin",  /* hic_builtin.glcs */
 "object age: {\n"
 "values value unit style;\n"
 "function text { result = value + unit + @if(@size(style)=0, \"\", \" (\" + style + \")\"); }\n"
 "}\n"
 "object fmt: {\n"
 "values code grammar rules visible pseudo:in pseudo:out shorthand;\n"
 "}\n"
 "object sch: {\n"
 "values code name basename fieldnames grammar formats default:in default:out visible;\n"
 "}\n" },
};

size_t glich::hics_builtin_scripts_size =
    sizeof(glich::hics_builtin_scripts) / sizeof(glich::ScriptModule);


// Default library section.
glich::StdStrMap glich::hics_default_scripts = {
    { "hic_lib",  /* hic_lib.glcs */
 "mark \"__hics_lib\";\n"
 "set context hics;\n"
 "module hics:jdn {\n"
 "grammar d;\n"
 "scheme jdn mjd rd;\n"
 "}\n"
 "module hics:week {\n"
 "lexicon w ws;\n"
 "grammar jwn jwsn;\n"
 "scheme jwn jwsn;\n"
 "}\n"
 "module hics:julian {\n"
 "lexicon m;\n"
 "grammar j;\n"
 "scheme j;\n"
 "}\n"
 "module hics:julian_shift {\n"
 "grammar j_sh;\n"
 "scheme jn ja jap;\n"
 "}\n"
 "module hics:easter {\n"
 "lexicon rpt rptd;\n"
 "grammar je;\n"
 "scheme je;\n"
 "}\n"
 "module hics:eh {\n"
 "scheme eh;\n"
 "}\n"
 "module hics:gregorian {\n"
 "grammar g;\n"
 "scheme g go gw;\n"
 "}\n"
 "module hics:jce {\n"
 "lexicon ce;\n"
 "grammar jce;\n"
 "scheme jce;\n"
 "}\n"
 "module hics:ay {\n"
 "lexicon jg;\n"
 "grammar jg;\n"
 "scheme ay;\n"
 "}\n"
 "module hics:hebrew {\n"
 "lexicon hm hcm hw;\n"
 "grammar h;\n"
 "scheme h;\n"
 "}\n"
 "module hics:french_rep {\n"
 "lexicon frnm frm frcomp frdd;\n"
 "grammar fr;\n"
 "scheme fr;\n"
 "}\n"
 "module hics:islamic {\n"
 "lexicon im iw;\n"
 "grammar i;\n"
 "scheme i ims if;\n"
 "}\n"
 "module hics:chinese {\n"
 "lexicon cstem cbrch animal lmon fs;\n"
 "grammar c;\n"
 "scheme c;\n"
 "}\n"
 "module hics:roc {\n"
 "grammar roc;\n"
 "scheme roc;\n"
 "}\n"
 "set inout g;\n" },
    { "jdn",  /* jdn.glcs */
 "grammar d {\n"
 "name \"Day Count\";\n"
 "fields day;\n"
 "alias pseudo { dddd day; }\n"
 "alias unit { d day; }\n"
 "format d \"{day}\";\n"
 "preferred d;\n"
 "}\n"
 "scheme jdn {\n"
 "name \"Julian Day Number\";\n"
 "base jdn;\n"
 "grammar d;\n"
 "}\n"
 "scheme mjd {\n"
 "name \"Modified Julian Day\";\n"
 "base jdn epoch:2400002;\n"
 "grammar d;\n"
 "visible no;\n"
 "}\n"
 "scheme rd {\n"
 "name \"Rata Die\";\n"
 "base jdn epoch:1721426;\n"
 "grammar d;\n"
 "visible no;\n"
 "}\n" },
    { "week",  /* week.glcs */
 "lexicon w {\n"
 "name \"Weekday names Monday start\";\n"
 "fieldname wday;\n"
 "lang en;\n"
 "pseudo Weekday, Wday;\n"
 "tokens {\n"
 "1, \"Monday\", \"Mon\";\n"
 "2, \"Tuesday\", \"Tue\";\n"
 "3, \"Wednesday\", \"Wed\";\n"
 "4, \"Thursday\", \"Thur\";\n"
 "5, \"Friday\", \"Fri\";\n"
 "6, \"Saturday\", \"Sat\";\n"
 "7, \"Sunday\", \"Sun\";\n"
 "}\n"
 "}\n"
 "grammar jwn {\n"
 "name \"Julian Week Number (Monday)\";\n"
 "fields week day;\n"
 "lexicons w;\n"
 "alias lexicon { wday day; }\n"
 "alias pseudo { wwwww week; d day; }\n"
 "alias unit { d day; w week; }\n"
 "format wd \"{week}| {day}\";\n"
 "format wday \"{week}| {day:w:a}\";\n"
 "format \"wday+\", \"{week}| {day:w}\";\n"
 "preferred wday;\n"
 "}\n"
 "scheme jwn {\n"
 "name \"Julian Week Number\";\n"
 "base jwn;\n"
 "grammar jwn;\n"
 "visible no;\n"
 "}\n"
 "lexicon ws {\n"
 "name \"Weekday names Sunday start\";\n"
 "fieldname wsday;\n"
 "lang en;\n"
 "pseudo Weekday, Wday;\n"
 "tokens {\n"
 "1, \"Sunday\", \"Sun\";\n"
 "2, \"Monday\", \"Mon\";\n"
 "3, \"Tuesday\", \"Tue\";\n"
 "4, \"Wednesday\", \"Wed\";\n"
 "5, \"Thursday\", \"Thur\";\n"
 "6, \"Friday\", \"Fri\";\n"
 "7, \"Saturday\", \"Sat\";\n"
 "}\n"
 "}\n"
 "grammar jwsn {\n"
 "name \"Julian Week Number (Sunday)\";\n"
 "fields week day;\n"
 "lexicons ws;\n"
 "alias lexicon { wsday day; }\n"
 "alias pseudo { wwwww week; d day; }\n"
 "alias unit { d day; w week; }\n"
 "format wd \"{week}| {day}\";\n"
 "format wday \"{week}| {day:ws:a}\";\n"
 "format \"wday+\", \"{week}| {day:ws}\";\n"
 "preferred wday;\n"
 "}\n"
 "scheme jwsn {\n"
 "name \"Julian Week (Sunday) Number\";\n"
 "base jwn sunday;\n"
 "grammar jwsn;\n"
 "visible no;\n"
 "}\n" },
    { "julian",  /* julian.glcs */
 "lexicon m {\n"
 "name \"Month names\";\n"
 "fieldname month;\n"
 "lang en;\n"
 "pseudo Month, Mon;\n"
 "tokens {\n"
 "1, \"January\", \"Jan\";\n"
 "2, \"February\", \"Feb\";\n"
 "3, \"March\", \"Mar\";\n"
 "4, \"April\", \"Apr\";\n"
 "5, \"May\";\n"
 "6, \"June\", \"Jun\";\n"
 "7, \"July\", \"Jul\";\n"
 "8, \"August\", \"Aug\";\n"
 "9, \"September\", \"Sep\";\n"
 "10, \"October\", \"Oct\";\n"
 "11, \"November\", \"Nov\";\n"
 "12, \"December\", \"Dec\";\n"
 "}\n"
 "}\n"
 "grammar j {\n"
 "name \"Julian\";\n"
 "fields year month day;\n"
 "optional wday;\n"
 "lexicons m, w;\n"
 "alias pseudo { w wday; dd day; mm month; yyyy year; }\n"
 "alias unit { d day; m month; y year; }\n"
 "format dmy \"{day} |{month:m:a} |{year}\";\n"
 "format \"dmy+\" \"{day} |{month:m} |{year}\";\n"
 "format wdmy \"{wday:w:a} |{day} |{month:m:a} |{year}\";\n"
 "format \"wdmy+\" \"{wday:w} |{day} |{month:m} |{year}\";\n"
 "format out { output \"{day::os} |{month:m} |{year}\"; }\n"
 "format full { output \"{wday:w} |{day::os} |{month:m} |{year}\"; }\n"
 "format mdy \"{month:m:a} |{day}, |{year}\";\n"
 "format \"mdy+\" \"{month:m} |{day}, |{year}\";\n"
 "format wmdy \"{wday:w:a}, |{month:m:a} |{day}, |{year}\";\n"
 "format \"wmdy+\" \"{wday:w}, |{month:m} |{day}, |{year}\";\n"
 "format ymd \"{year}|:{month:m:a}|:{day}\";\n"
 "preferred dmy;\n"
 "}\n"
 "scheme j {\n"
 "name \"Julian\";\n"
 "base julian;\n"
 "grammar j;\n"
 "}\n" },
    { "julian_shift",  /* julian_shift.glcs */
 "grammar j_sh {\n"
 "name \"Julian shifted epoch\";\n"
 "fields year month day;\n"
 "calculated cyear;\n"
 "optional wday;\n"
 "rank cyear month day;\n"
 "lexicons m w;\n"
 "alias pseudo { w wday; dd day; mm month; yyyy cyear; h year; }\n"
 "alias unit { d day; m month; hy year; cy cyear; }\n"
 "use epoch;\n"
 "format dmy \"{day} |{month:m:a} |{cyear/year}\";\n"
 "format \"dmy+\" \"{day} |{month:m} |{cyear/year}\";\n"
 "format wdmy \"{wday:w:a} |{day} |{month:m:a} |{cyear/year}\";\n"
 "format \"wdmy+\" \"{wday:w} |{day} |{month:m} |{cyear/year}\";\n"
 "format out { output \"{day::os} |{month:m} |{cyear/year}\"; }\n"
 "format full { output \"{wday:w} |{day::os} |{month:m} |{cyear/year}\"; }\n"
 "format mdy \"{month:m:a} |{day}, |{cyear/year}\";\n"
 "format \"mdy+\" \"{month:m} |{day}, |{cyear/year}\";\n"
 "format wmdy \"{wday:w:a}, |{month:m:a} |{day}, |{cyear/year}\";\n"
 "format \"wmdy+\" \"{wday:w}, |{month:m} |{day}, |{cyear/year}\";\n"
 "format cdef {\n"
 "inout \"{cyear}| {month}| {day}\";\n"
 "visible no;\n"
 "}\n"
 "preferred dmy;\n"
 "}\n"
 "scheme jn {\n"
 "name \"Julian Nativity\";\n"
 "base julian;\n"
 "epoch 1721417;\n"
 "grammar j_sh;\n"
 "}\n"
 "scheme ja {\n"
 "name \"Julian Annunciation Florence\";\n"
 "base julian;\n"
 "epoch 1721507;\n"
 "grammar j_sh;\n"
 "}\n"
 "scheme jap {\n"
 "name \"Julian Annunciation Pisa\";\n"
 "base julian;\n"
 "epoch 1721142;\n"
 "grammar j_sh;\n"
 "}\n" },
    { "easter",  /* easter.glcs */
 "lexicon rpt {\n"
 "name \"Repeated Date\";\n"
 "fieldname repeat;\n"
 "lang en;\n"
 "pseudo Repeated, Rpt;\n"
 "tokens {\n"
 "0, \"First\", \"F\";\n"
 "1, \"Repeated\", \"Rpt\";\n"
 "}\n"
 "}\n"
 "lexicon rptd {\n"
 "inherit rpt;\n"
 "fieldname repeated;\n"
 "}\n"
 "grammar je {\n"
 "fields eyear repeat month day;\n"
 "calculated repeated;\n"
 "optional hyear wsday;\n"
 "rank eyear month day;\n"
 "lexicons m ws rpt rptd;\n"
 "alias pseudo { w wsday; rpt repeat; dd day; mm month; yyyy eyear; h hyear; }\n"
 "alias unit { d day; r repeat; m month; y eyear; rptd repeated; }\n"
 "function def_to_calc {\n"
 "repeated = @if( repeat=1, 1, null );\n"
 "result = this;\n"
 "}\n"
 "function calc_to_def {\n"
 "repeat = @if( repeated=1, 1, 0 );\n"
 "result = this;\n"
 "}\n"
 "use { calculate def_to_calc; from:text calc_to_def; }\n"
 "format dmy \"{day} |{month:m} |{eyear/hyear}| {repeated:rptd}\";\n"
 "format dmy_a \"{day} |{month:m:a} |{eyear/hyear}| {repeated:rptd:a}\";\n"
 "format wdmy \"{wsday:ws} |{day} |{month:m} |{eyear/hyear}| {repeated:rptd}\";\n"
 "format wdmy_a \"{wsday:ws:a} |{day} |{month:m:a} |{eyear/hyear}| {repeated:rptd:a}\";\n"
 "format mdy \"{month:m} |{day}, |{eyear/hyear}| {repeated:rptd}\";\n"
 "format mdy_a \"{month:m:a} |{day}, |{eyear/hyear}| {repeated:rptd:a}\";\n"
 "format all \"{wsday:ws} |{day} |{month:m} |{eyear/hyear}| {repeat:rpt}\";\n"
 "format all_a \"{wsday:ws:a} |{day} |{month:m:a} |{eyear/hyear}| {repeat:rpt:a}\";\n"
 "preferred dmy;\n"
 "}\n"
 "scheme je {\n"
 "name \"Julian Easter\";\n"
 "base easter;\n"
 "grammar je;\n"
 "}\n" },
    { "eh",  /* eh.glcs */
 "scheme eh {\n"
 "name \"Julian Era Hispanica\";\n"
 "base julian \"year:-38\";\n"
 "grammar j;\n"
 "}\n" },
    { "gregorian",  /* gregorian.glcs */
 "grammar g {\n"
 "name \"Gregorian\";\n"
 "inherit j;\n"
 "format iso { rules iso8601 minus; }\n"
 "format iso_set { rules iso8601 dateset minus; }\n"
 "preferred dmy;\n"
 "}\n"
 "scheme g {\n"
 "name \"Gregorian\";\n"
 "base gregorian;\n"
 "grammar g;\n"
 "}\n"
 "grammar gw {\n"
 "name \"Year Week Day\";\n"
 "fields year week day;\n"
 "lexicons w;\n"
 "alias field { wday week; }\n"
 "alias pseudo { d day; ww week; yyyy year; }\n"
 "alias unit { d day; w week; y year; }\n"
 "format ywd \"{year}| {week}| {day:w:a}\";\n"
 "format \"ywd+\", \"{year}| {week}| {day:w}\";\n"
 "format iso { rules iso8601 week minus; }\n"
 "preferred ywd;\n"
 "}\n"
 "scheme gw {\n"
 "name \"Gregorian ISO Week\";\n"
 "base isoweek;\n"
 "grammar gw;\n"
 "}\n"
 "grammar go {\n"
 "name \"Year Day\";\n"
 "fields year day;\n"
 "alias pseudo { ddd day; yyyy year; }\n"
 "alias unit { d day; y year; }\n"
 "format yd \"{year}| {day}\";\n"
 "format iso { rules iso8601 ordinal minus; }\n"
 "preferred yd;\n"
 "}\n"
 "scheme go {\n"
 "name \"Gregorian Ordinal\";\n"
 "base ordinal;\n"
 "grammar go;\n"
 "}\n" },
    { "jce",  /* jce.glcs */
 "lexicon ce {\n"
 "name \"Historic Era\";\n"
 "fieldname ce;\n"
 "lang en;\n"
 "pseudo CommonEra, CE;\n"
 "tokens {\n"
 "0, \"Before Common Era\", \"BCE\";\n"
 "1, \"Common Era\", \"CE\";\n"
 "}\n"
 "}\n"
 "grammar jce {\n"
 "name \"Julian Common Era\";\n"
 "fields year month day;\n"
 "calculated ce ceyear;\n"
 "optional wday;\n"
 "rank ce ceyear month day;\n"
 "lexicons m w ce;\n"
 "alias pseudo { w wday; dd day; mm month; yyyy ceyear; ce ce; }\n"
 "alias unit { d day; m month; y year; cy ceyear; }\n"
 "function calc_ceyear {\n"
 "ce = @if( year<1, 0, 1 );\n"
 "ceyear = @if( year<1, -year+1, year );\n"
 "result = this;\n"
 "}\n"
 "function calc_year {\n"
 "year = @if( ce=1, ceyear, -ceyear+1 );\n"
 "result = this;\n"
 "}\n"
 "use { calculate calc_ceyear; from:text calc_year; }\n"
 "format dmye \"{day} |{month:m:a} |{ceyear} |{ce:ce:a}\";\n"
 "format wdmye \"{wday:w:a} |{day} |{month:m:a} |{ceyear} |{ce:ce:a}\";\n"
 "format mdye \"{month:m:a} |{day}, |{ceyear} |{ce:ce:a}\";\n"
 "format wmdye \"{wday:w:a} |{month:m:a} |{day}, |{ceyear} |{ce:ce:a}\";\n"
 "format \"dmye+\" \"{day} |{month:m} |{ceyear} |{ce:ce}\";\n"
 "format \"wdmye+\" \"{wday:w} |{day} |{month:m} |{ceyear} |{ce:ce}\";\n"
 "format out { output \"{day::os} |{month:m} |{ceyear} |{ce:ce}\"; }\n"
 "format full { output \"{wday:w} |{day::os} |{month:m} |{ceyear} |{ce:ce}\"; }\n"
 "preferred dmye;\n"
 "}\n"
 "scheme jce {\n"
 "name \"Julian Common Era\";\n"
 "base julian;\n"
 "grammar jce;\n"
 "}\n" },
    { "ay",  /* ay.glcs */
 "lexicon jg {\n"
 "name \"Hybrid Julian and Gregorian scheme names\";\n"
 "fieldname scheme;\n"
 "lang en;\n"
 "pseudo Scheme sch;\n"
 "tokens {\n"
 "0, \"Julian\", \"j\";\n"
 "1, \"Gregorian\", \"g\";\n"
 "}\n"
 "}\n"
 "grammar jg {\n"
 "name \"Hybrid Julian and Gregorian\";\n"
 "fields scheme year month day;\n"
 "rank year month day;\n"
 "lexicons m jg;\n"
 "alias pseudo { dd day; mm month; yyyy year; s scheme; }\n"
 "alias unit { d day; m month; y year; s scheme; }\n"
 "format dmy \"{day} |{month:m:a} |{year}\";\n"
 "format \"dmy+\" \"{day} |{month:m} |{year}\";\n"
 "format mdy \"{month:m:a} |{day}, |{year}\";\n"
 "format \"mdy+\" \"{month:m} |{day}, |{year}\";\n"
 "format dmys \"{day} |{month:m:a} |{year} |{scheme:jg:a}\";\n"
 "format \"dmys+\" \"{day} |{month:m} |{year} |{scheme:jg}\";\n"
 "format mdys \"{month:m:a} |{day}, |{year} |{scheme:jg:a}\";\n"
 "format \"mdys+\" \"{month:m} |{day}, |{year} |{scheme:jg}\";\n"
 "preferred dmy;\n"
 "}\n"
 "scheme ay {\n"
 "name \"Astronomical Year\";\n"
 "base hybrid {\n"
 "fields scheme year month day;\n"
 "scheme 0 { base julian; }\n"
 "change 2299161;\n"
 "scheme 1 { base gregorian; }\n"
 "}\n"
 "grammar jg;\n"
 "}\n" },
    { "hebrew",  /* hebrew.glcs */
 "lexicon hm {\n"
 "name \"Month names\";\n"
 "fieldname month;\n"
 "lang en;\n"
 "pseudo Month, Mon;\n"
 "tokens {\n"
 "1, \"Nissan\", \"Nsn\", \"Nisan\";\n"
 "2, \"Iyar\", \"Iyr\", \"Iyyar\";\n"
 "3, \"Sivan\", \"Svn\";\n"
 "4, \"Tammuz\", \"Tmz\", \"Tamaz\";\n"
 "5, \"Av\", \"Aav\";\n"
 "6, \"Elul\", \"Ell\";\n"
 "7, \"Tishrei\", \"Tsh\", \"Tishri\";\n"
 "8, \"Cheshvan\", \"Csh\", \"Marheshvan\", \"Heshvan\";\n"
 "9, \"Kislev\", \"Ksl\";\n"
 "10, \"Tevet\", \"Tvt\";\n"
 "11, \"Shevat\", \"Shv\", \"Shvat\";\n"
 "12, \"Adar\", \"Adr\";\n"
 "13, \"Adar II\", \"Ads\";\n"
 "}\n"
 "}\n"
 "lexicon hcm {\n"
 "name \"Complete Month names\";\n"
 "fieldname cmonth;\n"
 "inherit hm;\n"
 "tokens {\n"
 "14, \"Adar I\", \"Adf\";\n"
 "}\n"
 "}\n"
 "lexicon hw {\n"
 "name \"Weekday names\";\n"
 "fieldname wsday;\n"
 "lang en;\n"
 "pseudo Weekday, WDay;\n"
 "tokens {\n"
 "1, \"Yom Rishon\", \"Rish\";\n"
 "2, \"Yom Sheni\", \"Shen\";\n"
 "3, \"Yom Shelishi\", \"Shel\";\n"
 "4, \"Yom Revi'i\", \"Revi\";\n"
 "5, \"Yom Hamishi\", \"Hami\";\n"
 "6, \"Yom Shishi\", \"Shis\";\n"
 "7, \"Yom Shabbat\", \"Shab\";\n"
 "}\n"
 "}\n"
 "grammar h {\n"
 "name \"Hebrew\";\n"
 "fields year month day;\n"
 "calculated cmonth;\n"
 "optional wsday;\n"
 "rank year cmonth day;\n"
 "lexicons hm, hcm, hw;\n"
 "alias pseudo { w wsday; dd day; mm month; mm cmonth; yyyy year; }\n"
 "alias unit { d day; m month; cm cmonth; y year; }\n"
 "function calc_cmonth {\n"
 "cmonth = @if( month=12 and @leapyear.hebrew(year), 14, month );\n"
 "result = this;\n"
 "}\n"
 "function calc_month {\n"
 "month = @if( cmonth=14, 12, cmonth );\n"
 "result = this;\n"
 "}\n"
 "use { calculate calc_cmonth; from:text calc_month; }\n"
 "format dmy_a \"{day} |{cmonth:hcm:a} |{year}\";\n"
 "format dmy \"{day} |{cmonth:hcm} |{year}\";\n"
 "format \"dmy-\" {\n"
 "inout \"{day} |{month} |{year}\";\n"
 "rank year month day;\n"
 "use:in calc_cmonth;\n"
 "}\n"
 "format wdmy \"{wsday:hw} |{day} |{cmonth:hcm} |{year}\";\n"
 "format ymd \"{year}| {cmonth:hcm}| {day}\";\n"
 "format \"ymd-\" {\n"
 "inout \"{year}| {month}| {day}\";\n"
 "rank year month day;\n"
 "use:in calc_cmonth;\n"
 "}\n"
 "format gedcom {\n"
 "inout \"{day} |{month:hm:a:u} |{year}\";\n"
 "rank year month day;\n"
 "use:in calc_cmonth;\n"
 "}\n"
 "preferred dmy;\n"
 "}\n"
 "scheme h {\n"
 "name \"Hebrew\";\n"
 "base hebrew;\n"
 "grammar h;\n"
 "}\n" },
    { "french_rep",  /* french_rep.glcs */
 "lexicon frnm {\n"
 "name \"Normal Month names\";\n"
 "fieldname nmonth;\n"
 "lang en;\n"
 "pseudo Month, Mon;\n"
 "tokens {\n"
 "1, \"Vendémiaire\", \"Vend\";\n"
 "2, \"Brumaire\", \"Brum\";\n"
 "3, \"Frimaire\", \"Frim\";\n"
 "4, \"Nivôse\", \"Nivo\";\n"
 "5, \"Pluviôse\", \"Pluv\";\n"
 "6, \"Ventôse\", \"Vent\";\n"
 "7, \"Germinal\", \"Germ\";\n"
 "8, \"Floréal\", \"Flor\";\n"
 "9, \"Prairial\", \"Prai\";\n"
 "10, \"Messidor\", \"Mess\";\n"
 "11, \"Thermidor\", \"Ther\";\n"
 "12, \"Fructidor\", \"Fruc\";\n"
 "}\n"
 "}\n"
 "lexicon frm {\n"
 "name \"Month names\";\n"
 "inherit frnm;\n"
 "fieldname month;\n"
 "tokens {\n"
 "13, \"Complémentaires\", \"Comp\";\n"
 "}\n"
 "}\n"
 "lexicon frcomp {\n"
 "name \"Complementary Days\";\n"
 "fieldname cday;\n"
 "lang en;\n"
 "pseudo CompDay, CDay;\n"
 "tokens {\n"
 "1, \"Fête de la Vertu\", \"Ver\";\n"
 "2, \"Fête du Génie\", \"Gen\";\n"
 "3, \"Fête du Travail\", \"Trav\";\n"
 "4, \"Fête de l'Opinion\", \"Opin\";\n"
 "5, \"Fête des Récompenses\", \"Rec\";\n"
 "6, \"Fête de la Révolution\", \"Rev\";\n"
 "}\n"
 "}\n"
 "lexicon frdd {\n"
 "name \"Decade Day\";\n"
 "fieldname dday;\n"
 "lang en;\n"
 "pseudo DecDay, DDay;\n"
 "tokens {\n"
 "1, \"Primidi\", \"Prim\";\n"
 "2, \"Duodi\", \"Duo\";\n"
 "3, \"Tridi\", \"Tri\";\n"
 "4, \"Quartidi\", \"Quar\";\n"
 "5, \"Quintidi\", \"Quin\";\n"
 "6, \"Sextidi\", \"Sext\";\n"
 "7, \"Septidi\", \"Sept\";\n"
 "8, \"Octidi\", \"Oct\";\n"
 "9, \"Nonidi\", \"Non\";\n"
 "10, \"Décadi\", \"Dec\";\n"
 "}\n"
 "}\n"
 "grammar fr {\n"
 "name \"French Republic\";\n"
 "fields year month day;\n"
 "calculated nmonth nmday cday, dday;\n"
 "optional wday;\n"
 "rank year nmonth nmday;\n"
 "lexicons frm, frnm, frcomp, frdd, w;\n"
 "alias pseudo { dd day; mm month; yyyy year; mm nmonth; dd nmday; c cday; d dday; w wday; }\n"
 "alias unit { d day; m month; y year; nm nmonth; nd nmday; cd cday; dd dday; }\n"
 "function calc_to_def {\n"
 "if cday = null\n"
 "month = nmonth;\n"
 "day = nmday;\n"
 "dday = ( (day - 1) mod 10 ) + 1;\n"
 "else\n"
 "month = 13;\n"
 "day = cday;\n"
 "dday = null;\n"
 "endif\n"
 "result = this;\n"
 "}\n"
 "function def_to_calc {\n"
 "if month <> null\n"
 "if month < 13\n"
 "nmonth = month;\n"
 "nmday = day;\n"
 "cday = null;\n"
 "dday = ( (day - 1) mod 10 ) + 1;\n"
 "else\n"
 "nmonth = null;\n"
 "nmday = null;\n"
 "cday = day;\n"
 "dday = null;\n"
 "endif\n"
 "endif\n"
 "result = this;\n"
 "}\n"
 "use { calculate def_to_calc; from:text calc_to_def; }\n"
 "format dmy_a {\n"
 "inout \"{day} |{month:frm:a} |{year}\";\n"
 "rank year month day;\n"
 "use:in def_to_calc;\n"
 "}\n"
 "format dmy {\n"
 "inout \"{day} |{month:frm} |{year}\";\n"
 "rank year month day;\n"
 "use:in def_to_calc;\n"
 "}\n"
 "format ymd {\n"
 "inout \"{year}| {month:frm}| {day}\";\n"
 "rank year month day;\n"
 "use:in def_to_calc;\n"
 "}\n"
 "format cdmy \"{cday:frcomp} |{nmday} |{nmonth:frnm} |{year}\";\n"
 "format \"cdmy-\" \"{cday:frcomp:a} |{nmday} |{nmonth:frnm:a} |{year}\";\n"
 "format out {\n"
 "output \"{cday:frcomp} |{nmday} |{nmonth:frnm} |an {year::rn}\";\n"
 "}\n"
 "format dcdmy \"{dday:frdd} |{cday:frcomp} |{nmday} |{nmonth:frnm} |{year}\";\n"
 "format \"dcdmy-\" \"{dday:frdd:a} |{cday:frcomp:a} |{nmday} |{nmonth:frnm:a} |{year}\";\n"
 "format wcdmy \"{wday:w}, |{cday:frcomp} |{nmday} |{nmonth:frnm} |{year}\";\n"
 "format \"wcdmy-\" \"{wday:w:a}, |{cday:frcomp:a} |{nmday} |{nmonth:frnm:a} |{year}\";\n"
 "format gedcom {\n"
 "inout \"{day} |{month:frm:a:u} |{year}\";\n"
 "rank year month day;\n"
 "use:in def_to_calc;\n"
 "}\n"
 "preferred dmy;\n"
 "}\n"
 "scheme fr {\n"
 "name \"French Republic\";\n"
 "base french;\n"
 "grammar fr;\n"
 "}\n" },
    { "islamic",  /* islamic.glcs */
 "lexicon im {\n"
 "name \"Islamic Month names\";\n"
 "fieldname month;\n"
 "lang en;\n"
 "pseudo Month, Mon;\n"
 "tokens {\n"
 "1, \"Muḥarram\", \"Muharram\";\n"
 "2, \"Ṣafar\", \"Safar\";\n"
 "3, \"Rabī‘ al-Awwal\", \"Rabi' I\";\n"
 "4, \"Rabī‘ al-Ākhir\", \"Rabi' II\";\n"
 "5, \"Jumādá al-Ūlá\", \"Jumada I\";\n"
 "6, \"Jumādá al-Ākhira\", \"Jumada II\";\n"
 "7, \"Rajab\";\n"
 "8, \"Sha‘bān\", \"Sha'aban\";\n"
 "9, \"Ramaḍān\", \"Ramadan\";\n"
 "10, \"Shawwāl\", \"Shawwal\";\n"
 "11, \"Dhū al-Qa‘dah\", \"Dhu al-Qa'dah\";\n"
 "12, \"Dhū al-Ḥijjah\", \"Dhu al-Hijjah\";\n"
 "}\n"
 "}\n"
 "lexicon iw {\n"
 "name \"Islamic Weekday names\";\n"
 "fieldname wsday;\n"
 "lang en;\n"
 "pseudo Weekday, WDay;\n"
 "tokens {\n"
 "1, \"Yawm al-Aḥad\", \"Ahad\";\n"
 "2, \"Yawm al-Ithnayn\", \"Ithn\";\n"
 "3, \"Yawm ath-Thulāthāʼ\", \"Thul\";\n"
 "4, \"Yawm al-Arbi‘ā’\", \"Arbi\";\n"
 "5, \"Yawm al-Khamīs\", \"Kham\";\n"
 "6, \"Yawm al-Jumu‘ah\", \"Jumu\";\n"
 "7, \"Yawm as-Sabt\", \"Sabt\";\n"
 "}\n"
 "}\n"
 "grammar i {\n"
 "name \"Tabular Islamic\";\n"
 "fields year month day;\n"
 "optional wsday;\n"
 "lexicons im iw;\n"
 "alias pseudo { w wsday; dd day; mm month; yyyy year; }\n"
 "alias unit { d day; m month; y year; }\n"
 "format dmy \"{day} |{month:im} |{year}\";\n"
 "format dmy_a \"{day} |{month:im:a} |{year}\";\n"
 "format dmy_d \"{day} |{month} |{year}\";\n"
 "format wdmy \"{wsday:iw} |{day} |{month:im} |{year}\";\n"
 "format wdmy_a \"{wsday:iw:a} |{day} |{month:im:a} |{year}\";\n"
 "format ymd \"{year}| {month:im:a}| {day}\";\n"
 "preferred dmy;\n"
 "}\n"
 "scheme i {\n"
 "name \"Islamic Tabular\";\n"
 "base islamic IIc;\n"
 "grammar i;\n"
 "}\n"
 "scheme ims {\n"
 "name \"Islamic Microsoft Hijri\";\n"
 "base islamic IIa;\n"
 "grammar i;\n"
 "}\n"
 "scheme \"if\" {\n"
 "name \"Islamic Fātimid\";\n"
 "base islamic IIIa;\n"
 "grammar i;\n"
 "}\n" },
    { "chinese",  /* chinese.glcs */
 "lexicon cstem {\n"
 "name \"Chinese Year Stem\";\n"
 "fieldname stem;\n"
 "lang en;\n"
 "pseudo Stem, Stm;\n"
 "tokens {\n"
 "1, \"Jiǎ\", \"Jia\";\n"
 "2, \"Yǐ\", \"Yi\";\n"
 "3, \"Bǐng\", \"Bing\";\n"
 "4, \"Dīng\", \"Ding\";\n"
 "5, \"Wù\", \"Wu\";\n"
 "6, \"Jǐ\", \"Ji\";\n"
 "7, \"Gēng\", \"Geng\";\n"
 "8, \"Xīn\", \"Xin\";\n"
 "9, \"Rén\", \"Ren\";\n"
 "10, \"Guì\", \"Gui\";\n"
 "}\n"
 "}\n"
 "lexicon cbrch {\n"
 "name \"Chinese Year Branch\";\n"
 "fieldname branch;\n"
 "lang en;\n"
 "pseudo branch, brch;\n"
 "tokens {\n"
 "1, \"Zǐ\", \"Zi\";\n"
 "2, \"Chǒu\", \"Chou\";\n"
 "3, \"Yín\", \"Yin\";\n"
 "4, \"Mǎo\", \"Mao\";\n"
 "5, \"Chén\", \"Chen\";\n"
 "6, \"Sì\", \"Si\";\n"
 "7, \"Wǔ\", \"Wu\";\n"
 "8, \"Wèi\", \"Wei\";\n"
 "9, \"Shēn\", \"Shen\";\n"
 "10, \"Yǒu\", \"You\";\n"
 "11, \"Xū\", \"Xu\";\n"
 "12, \"Hài\", \"Hai\";\n"
 "}\n"
 "}\n"
 "lexicon animal {\n"
 "name \"Chinese Year Animals\";\n"
 "fieldname branch;\n"
 "lang en;\n"
 "pseudo Animal;\n"
 "tokens {\n"
 "1, \"Rat\";\n"
 "2, \"Ox\";\n"
 "3, \"Tiger\";\n"
 "4, \"Rabbit\";\n"
 "5, \"Dragon\";\n"
 "6, \"Snake\";\n"
 "7, \"Horse\";\n"
 "8, \"Goat\";\n"
 "9, \"Monkey\";\n"
 "10, \"Rooster\";\n"
 "11, \"Dog\";\n"
 "12, \"Pig\";\n"
 "}\n"
 "}\n"
 "lexicon lmon {\n"
 "name \"Leap month\";\n"
 "fieldname clmonth;\n"
 "lang en;\n"
 "pseudo LeapMon, LM;\n"
 "tokens {\n"
 "0, \"Month\";\n"
 "1, \"Leap-month\", \"Leap\";\n"
 "}\n"
 "}\n"
 "lexicon fs {\n"
 "name \"First and Second\";\n"
 "fieldname lmonth;\n"
 "lang en;\n"
 "pseudo FirstSecond, FS;\n"
 "tokens {\n"
 "0, \"First\", \"F\";\n"
 "1, \"Second\", \"S\";\n"
 "}\n"
 "}\n"
 "grammar c {\n"
 "name \"Chinese\";\n"
 "fields cycle cyear month lmonth day;\n"
 "calculated clmonth stem branch;\n"
 "lexicons lmon fs cstem cbrch animal;\n"
 "alias pseudo { dd day; mm month; lm lmonth; yy cyear; cc cycle; }\n"
 "alias unit { d day; m month; lm lmonth; y cyear; c cycle; cm clmonth; s stem; b branch; }\n"
 "function calc_to_def {\n"
 "lmonth = @if(clmonth=null, 0, 1);\n"
 "if stem <> null and branch <> null\n"
 "cyear = ((stem - branch) mod 12) * 5 + stem;\n"
 "endif\n"
 "result = this;\n"
 "}\n"
 "function def_to_calc {\n"
 "clmonth = @if(lmonth=0, null, 1);\n"
 "stem = (cyear - 1) mod 10 + 1;\n"
 "branch = (cyear - 1) mod 12 + 1;\n"
 "result = this;\n"
 "}\n"
 "use { calculate def_to_calc; from:text calc_to_def; }\n"
 "format cymld {\n"
 "inout \"{cycle}| {cyear}| {month}| {lmonth:fs:a:l}| {day}\";\n"
 "use:in def_to_calc;\n"
 "}\n"
 "format cylmd {\n"
 "inout \"{cycle}| {cyear}| {clmonth:lmon:a}| {month}| {day}\";\n"
 "rank cycle cyear month day;\n"
 "use:in calc_to_def;\n"
 "}\n"
 "format cylmd_s {\n"
 "inout \"{cycle}| {stem:cstem}|-{branch:cbrch::l}|, {clmonth:lmon:a}| {month}| {day}\";\n"
 "rank cycle month day;\n"
 "separators \",-\";\n"
 "}\n"
 "format full {\n"
 "output \"Cycle: {cycle},| Year: {stem:cstem}-{branch:cbrch::l} ({cyear}),| {lmonth:lmon}:| {month},| Day: {day}\";\n"
 "}\n"
 "format animal { output \"({cycle}c)| {cyear} Year of the {branch:animal}| {month}| {lmonth:lmon}| {day}d\"; }\n"
 "preferred cymld;\n"
 "}\n"
 "scheme c {\n"
 "name \"Chinese\";\n"
 "base chinese;\n"
 "grammar c;\n"
 "}\n" },
    { "roc",  /* roc.glcs */
 "grammar roc {\n"
 "name \"Republic of China\";\n"
 "fields year month day;\n"
 "alias pseudo { dd day; mm month; yyy year; }\n"
 "alias unit { d day; m month; y year; }\n"
 "format ymd {\n"
 "separators \"/,:\";\n"
 "inout \"ROC {year}|/{month}|/{day}\";\n"
 "}\n"
 "format \"ymd.\" {\n"
 "separators \".,:\";\n"
 "inout \"ROC {year}|.{month}|.{day}\";\n"
 "}\n"
 "format cns7648 {\n"
 "separators \"-\";\n"
 "inout \"ROC {year::lp:03}|-{month::lp:02}|-{day::lp:02}\";\n"
 "pseudo:out \"ROC yyy-mm-dd\";\n"
 "pseudo:in \"yyy-mm-dd\";\n"
 "}\n"
 "preferred ymd;\n"
 "}\n"
 "scheme roc {\n"
 "name \"Republic of China (Gregorian)\";\n"
 "base gregorian year:1911;\n"
 "grammar roc;\n"
 "}\n" },
};


// End of lib/hics/hicScripts.f2c file
