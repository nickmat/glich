// julian-01.glcs  -  Uppercase version of hics standard library

lexicon W {
    name "Weekday names";
    fieldname wday;
    lang en;
    pseudo    Weekday,  WDay;
    tokens {
        1, "Monday",    "Mon";
        2, "Tuesday",   "Tue";
        3, "Wednesday", "Wed";
        4, "Thursday",  "Thur";
        5, "Friday",    "Fri";
        6, "Saturday",  "Sat";
        7, "Sunday",    "Sun";
    }
}

lexicon M {
    name "Month names";
    fieldname month;
    lang en;
    pseudo     Month,     Mon;
    tokens {
        1,  "January",   "Jan";
        2,  "February",  "Feb";
        3,  "March",     "Mar";
        4,  "April",     "Apr";
        5,  "May";
        6,  "June",      "Jun";
        7,  "July",      "Jul";
        8,  "August",    "Aug";
        9,  "September", "Sep";
        10, "October",   "Oct";
        11, "November",  "Nov";
        12, "December",  "Dec";
    }
}

lexicon CE {
    name "Historic Era";
    fieldname ce;
    lang en;
    pseudo    CommonEra,         CE;
    tokens {
        0, "Before Common Era", "BCE";
        1, "Common Era",        "CE";
    }
}

grammar JCE {
    fields year month day;
    optional wday;
    calculated ce ceyear;
    rank ce, ceyear, month, day;
    lexicons M, W, CE;
    alias pseudo { w wday; dd day; mm month; yyyy ceyear; ce ce; }
    alias unit { d day; m month; y year; cy ceyear; }

    // Record: year month day ce ceyear
    function calc_ceyear { // output
        ce = @if( year<1, 0, 1 );
        ceyear = @if( year<1, -year+1, year );
        result = this;
    }
    function calc_year { // input
        year = @if( ce=1, ceyear, -ceyear+1 );
        result = this;
    }

    use { calculate calc_ceyear; from:text calc_year; }

    format  dmye, "{day} |{month:M:a} |{ceyear} |{ce:CE:a}";
    format  wdmye, "{wday:W:a} |{day} |{month:M:a} |{ceyear} |{ce:CE:a}";
    format  out {
        output "{day::os} |{month:M} |{ceyear} |{ce:CE}";
    }
    preferred dmye;
}

scheme JCE {
    name "Julian Common Era";
    base julian;
    grammar JCE;
}


write nl;
write @scheme.JCE( 1721423 ), @scheme.JCE( 1721424 ) nl;
write @scheme.JCE:dmye( "31 dec 1 bce" ), @scheme.JCE:dmye( "1 jan 1 ce" ) nl;
write @text.JCE:dmye( 1721423 ), @text.JCE:dmye( 1721424 ) nl;
write @text.JCE:dmye( {s:JCE 0,12,31} ), @text.JCE:dmye( {s:JCE 1,1,1} ) nl;
write @text.JCE:dmye ({s:JCE ,12,31,0,1}@calc_year), @text.JCE:dmye ({s:JCE ,1,1,1,1}@calc_year) nl;
write @date.JCE:dmye( "31 dec 1 bce" ), @date.JCE:dmye( "1 jan 1 ce" ) nl;
write @date.JCE( {s:JCE 0,12,31} ), @date.JCE( {s:JCE 1,1,1} ) nl;
write @date.JCE( {s:JCE ,12,31,0,1}@calc_year ), @date.JCE( {s:JCE ,1,1,1,1}@calc_year ) nl;
write @text.JCE:out( 2432814 ) nl;
let fo = @fmt:object.JCE:u;
write fo[pseudo:in], fo[pseudo:out] nl;

/*[OUTPUT]

{s:JCE 0, 12, 31, 0, 1, 5}, {s:JCE 1, 1, 1, 1, 1, 6}
{s:JCE 0, 12, 31, 0, 1, 5}, {s:JCE 1, 1, 1, 1, 1, 6}
31 Dec 1 BCE, 1 Jan 1 CE
31 Dec 1 BCE, 1 Jan 1 CE
31 Dec 1 BCE, 1 Jan 1 CE
1721423, 1721424
1721423, 1721424
1721423, 1721424
6th September 1948 Common Era
9y 9m 9d 9ce 9cy, 9y 9m 9d 9ce 9cy

[OUTPUT]*/
