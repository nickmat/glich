// c-004.glcs  Create c scheme format table.

let sch = "c";

let d1 = 2460866;
let d2 = 2460896;
let d3 = 2460896;

let so = @sch:object.(sch);
let sfl = so[formats];
let size = @size( sfl );
let index = 0;

write nl;
write "<table class='basic data'>" nl;
write "<tr><th colspan='5'>Formats - Grammar " + so[grammar] + "</th></tr>" nl;
write "<tr><th>Code</th><th>Rule</th><th>Pseudo</th><th>Example</th><th>Note</th></tr>" nl;

do
    let fmt = sfl[(index)];
    let sig = sch + ":" + fmt;
    let fo = @fmt:object.(sig);
    let note = @if(fo[visible], "", "H");
    if so[default:in] = fmt or so[default:out] = fmt
        if @size( note ) > 0
            note += ", ";
        endif
        note += "D";
    endif
    if fo[shorthand]
        if @size( note ) > 0
            note += ", ";
        endif
        note += "S";
    endif
    
    let p = fo[pseudo:in];
    if @size(p) > 0
        p = "<b>Input:</b> " + p + "<br />";
    endif
    p = "<td>" + p + "<b>Output:</b> " + fo[pseudo:out] + "</td>";

    let row = "<tr><td><b>" + fo[code] + "</b></td>"
      + "<td>" +fo[rules] + "</td>"
      + p
      + "<td class='example'>" + @text.(sig)(d1) + "<br />"
      + @text.(sig)(d2) + "<br />"
      + @text.(sig)(d3) + "</td>"
      + "<td>" + note + "</td></tr>";

    write row nl;

    index += 1;
    until index = size;
loop

write "<tr><td colspan='6'>Notes: D = Default, H = Hidden." nl;
write "Example based on jdn# " + d1, d2 + " and " + d3 + "</td></tr>" nl;
write "</table>" nl;


/*[OUTPUT]

<table class='basic data'>
<tr><th colspan='5'>Formats - Grammar c</th></tr>
<tr><th>Code</th><th>Rule</th><th>Pseudo</th><th>Example</th><th>Note</th></tr>
<tr><td><b>cymld</b></td><td>text</td><td><b>Input:</b> cycle cyear month lmonth day<br /><b>Output:</b> cc yy mm fs dd</td><td class='example'>78 42 6 f 15<br />78 42 6 s 15<br />78 42 6 s 15</td><td>D, S</td></tr>
<tr><td><b>cylmd</b></td><td>text</td><td><b>Input:</b> cycle cyear clmonth month day<br /><b>Output:</b> cc yy LM mm dd</td><td class='example'>78 42 6 15<br />78 42 Leap 6 15<br />78 42 Leap 6 15</td><td></td></tr>
<tr><td><b>cylmd_s</b></td><td>text</td><td><b>Input:</b> cycle stem branch clmonth month day<br /><b>Output:</b> cc Stem-branch, LM mm dd</td><td class='example'>78 Yǐ-sì 6 15<br />78 Yǐ-sì, Leap 6 15<br />78 Yǐ-sì, Leap 6 15</td><td></td></tr>
<tr><td><b>full</b></td><td>text</td><td><b>Output:</b> Cycle: cc, Year: Stem-branch (yy), LeapMon: mm, Day: dd</td><td class='example'>Cycle: 78, Year: Yǐ-sì (42), Month: 6, Day: 15<br />Cycle: 78, Year: Yǐ-sì (42), Leap-month: 6, Day: 15<br />Cycle: 78, Year: Yǐ-sì (42), Leap-month: 6, Day: 15</td><td></td></tr>
<tr><td><b>animal</b></td><td>text</td><td><b>Output:</b> (ccc) yy Year of the Animal mm LeapMon ddd</td><td class='example'>(78c) 42 Year of the Snake 6 Month 15d<br />(78c) 42 Year of the Snake 6 Leap-month 15d<br />(78c) 42 Year of the Snake 6 Leap-month 15d</td><td></td></tr>
<tr><td><b>def</b></td><td>text</td><td><b>Input:</b> cycle cyear month lmonth day clmonth stem branch<br /><b>Output:</b> cc yy mm lm dd clmonth stem branch</td><td class='example'>78 42 6 0 15 2 6<br />78 42 6 1 15 1 2 6<br />78 42 6 1 15 1 2 6</td><td>H</td></tr>
<tr><td><b>u</b></td><td>unit</td><td><b>Input:</b> 9c 9y 9m 9lm 9d 9cm 9s 9b<br /><b>Output:</b> 9c 9y 9m 9lm 9d 9cm 9s 9b</td><td class='example'>78c 42y 6m 0lm 15d 2s 6b<br />78c 42y 6m 1lm 15d 1cm 2s 6b<br />78c 42y 6m 1lm 15d 1cm 2s 6b</td><td>H</td></tr>
<tr><td colspan='6'>Notes: D = Default, H = Hidden.
Example based on jdn# 2460866, 2460896 and 2460896</td></tr>
</table>

[OUTPUT]*/
